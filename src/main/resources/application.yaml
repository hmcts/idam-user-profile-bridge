server:
  port: 8080

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info

springdoc:
  packagesToScan: uk.gov.hmcts.idam.userprofilebridge.controllers
  writer-with-order-by-keys: true

idam:
  api:
    url: http://idam-api
  client:
    registration:
      id: idam-user-profile-bridge
  s2s-auth:
    microservice: idam-user-profile-bridge
    totp_secret: dummy
    url: dummy
  messaging:
    subscription:
      add-user: idam-add-user/Subscriptions/idam-add-user
      modify-user: idam-modify-user/Subscriptions/idam-modify-user

rd:
  userprofile:
    client:
      registration:
        id: rd-userprofile-api
        service-account-user: dummy
        service-account-password: dummy
    api:
      url: dummy
  caseworker:
    api:
      url: dummy

spring:
  config:
    import: "optional:configtree:/mnt/secrets/idam-idam/"
  application:
    name: idam-user-profile-bridge
  jms:
    servicebus:
      connection-string: Endpoint=sb://idam-servicebus-preview.servicebus.windows.net/
      topic-client-id: 1c4f0704-a29e-403d-b719-b90c34ef14c9
      pricing-tier: standard
      passwordless-enabled: true
      namespace: idam-servicebus-preview
  artemis:
    mode: embedded
    embedded:
      enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://idam-web-public/o/jwks
      client:
        registration:
          idam-user-profile-bridge:
            authorization-grant-type: client_credentials
            client-id: idam-user-profile-bridge
            client-secret: dummy
            client-authentication-method: client_secret_post
            redirect-uri: https://idam-user-profile-bridge
            scope:
              - view-user
          rd-userprofile-api:
            authorization-grant-type: password
            client-id: idam-user-profile-bridge
            client-secret: dummy
            client-authentication-method: client_secret_post
            scope:
              - openid
              - profile
              - roles
        provider:
          idam-user-profile-bridge:
            token-uri: http://idam-web-public/o/token
          rd-userprofile-api:
            token-uri: http://idam-web-public/o/token
  cloud:
    openfeign:
      client:
        config:
          default:
            errorDecoder: uk.gov.hmcts.cft.idam.api.v2.common.error.SpringWebClientErrorDecoder
            retryer: uk.gov.hmcts.cft.idam.api.v2.common.error.SpringWebClientRetryer
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT}/${DATASOURCE_DATABASE}?sslmode=require&stringtype=unspecified
    username: dummy
    password: dummy
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: HikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    open-in-view: false
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true

featureFlags:
  s2sTestingSupportEnabled: true

scheduler:
  enabled: true
  initialDelayMs: 60000
  invitations:
    triggerFrequencyMs: 900000
    invitations-since-duration: 15m
    batch-size: 100
