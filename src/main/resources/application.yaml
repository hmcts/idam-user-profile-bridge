server:
  port: 8080

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info

springdoc:
  packagesToScan: uk.gov.hmcts.idam.userprofilebridge.controllers
  writer-with-order-by-keys: true

idam:
  api:
    url: http://idam-api
  client:
    registration:
      id: idam-user-profile-bridge

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/idam/"
  application:
    name: idam-user-profile-bridge
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://idam-web-public/o/jwks
      client:
        registration:
          idam-user-profile-bridge:
            authorization-grant-type: client_credentials
            client-id: idam-user-profile-bridge
            client-secret: dummy
            client-authentication-method: client_secret_post
            redirect-uri: https://idam-user-profile-bridge
            scope:
              - view-user
        provider:
          idam-user-profile-bridge:
            token-uri: http://idam-web-public/o/token
  cloud:
    openfeign:
      client:
        config:
          default:
            errorDecoder: uk.gov.hmcts.cft.idam.api.v2.common.error.SpringWebClientErrorDecoder
            retryer: uk.gov.hmcts.cft.idam.api.v2.common.error.SpringWebClientRetryer
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_OPTIONS:}
#    username: ${DB_USER_NAME}
#    password: ${DB_PASSWORD}
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true
