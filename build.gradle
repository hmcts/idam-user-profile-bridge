plugins {
  id 'application'
  id 'checkstyle'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.springframework.boot' version '3.3.11'
  id 'org.owasp.dependencycheck' version '12.1.3'
  id 'com.github.ben-manes.versions' version '0.52.0'
  id 'org.sonarqube' version '6.2.0.5505'
  id "net.serenity-bdd.serenity-gradle-plugin" version "4.2.34"
}

group = 'com.github.hmcts'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
    }
  }
}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom testRuntime

  smokeTestImplementation.extendsFrom testImplementation
  smokeTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task fortifyScan(type: JavaExec)  {
  mainClass = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

checkstyle {
  maxWarnings = 0
  toolVersion = '11.0.1'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
  checkstyleTest.enabled = false
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    html.required = true
  }
}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport
project.tasks['functional'].finalizedBy aggregate

sonarqube {
  properties {
    property "sonar.projectName", "HMCTS :: idam-user-profile-bridge"
    property "sonar.projectKey", "com.github.hmcts:idam-user-profile-bridge"
    property "sonar.exclusions", ["**/config/**",
                                  "**/controllers/**",
                                  "**/model/**",
                                  "**/uk/gov/hmcts/cft/**"
    ]
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = 0
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }

    skipConfigurations = [
    "checkstyle",
    "compileOnly",
    "functionalTest",
    "smokeTest",
    "contractTestRuntimeClasspath",
    "contractTestCompileClasspath"
  ]
}

ext {
    log4JVersion = "2.25.1"
    springCloudVersion = "2023.0.5"
    restAssuredVersion = "5.3.1"
    reformLoggingVersion = "6.1.9"
    serenityVersion = "4.2.34"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.81'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '33.4.8-jre') {
      entry 'guava'
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url = 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1' }
  google()
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'com.azure.spring', name: 'spring-cloud-azure-starter-servicebus-jms', version: '5.23.0'
  implementation group: 'com.google.guava', name: 'guava', version: '33.4.8-jre'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
  implementation group: 'org.yaml', name: 'snakeyaml', version: '2.5'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLoggingVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion
  implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.5.0'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.7'
  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.3'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.18.3'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.3'
  implementation group: 'io.opentelemetry', name: 'opentelemetry-api', version: '1.53.0'
  implementation group: 'com.github.hmcts', name: 'idam-legacy-auth-support', version: '0.1.7'
  implementation group: 'com.github.hmcts', name: 'idam-oidc-auth-support', version: '0.1.3'

  // in memory queues for PRs
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-artemis'
  implementation group: 'org.apache.activemq', name: 'artemis-jms-server', version: '2.42.0'

  implementation 'org.apache.httpcomponents:httpclient'
  constraints {
    implementation('org.apache.httpcomponents:httpclient:4.5.14') {
      because 'CVE-2020-13956 from dependency in service-auth-provider-java-client 5.1.0'
    }
  }

  implementation 'com.azure:azure-identity'
  constraints {
    implementation('com.azure:azure-identity:1.17.0') {
      because 'CVE-2023-36414, CVE-2023-36415 from dependency in com.azure.spring:spring-cloud-azure-starter-servicebus-jms:5.5.0'
    }
  }

  compileOnly group: 'org.projectlombok', name: 'lombok'
  annotationProcessor group: 'org.projectlombok', name: 'lombok'

  testImplementation(platform('org.junit:junit-bom:5.13.4'))
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: serenityVersion
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: serenityVersion
  testImplementation (group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: serenityVersion) {
    exclude group: 'org.codehaus.groovy', module: 'groovy'
  }
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: serenityVersion

  testImplementation 'com.github.hmcts:fortify-client:1.4.10:all'
}

mainClassName = 'uk.gov.hmcts.idam.userprofilebridge.Application'

bootJar {
  getArchiveFileName().set(provider {
    'idam-user-profile-bridge.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

bootRun {
  systemProperties = System.properties
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
